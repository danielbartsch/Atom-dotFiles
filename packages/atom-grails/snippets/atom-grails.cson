'.text.html.grails':
  '<g:checkBox>':
    'prefix': 'checkBox'
    'body': '<g:checkBox name="${1:name}" value="\\${${2:true}}" />'
  '<g:createLink>':
    'prefix': 'createLink'
    'body': '<g:createLink ${1:action="$2" }${3:controller="$4" }${5:id="$6" }${7:params="$8" }${9:url="$10" }${11:absolute="$12" }${13:base="$14"}>$15</g:createLink>'
  '<g:createLinkTo>':
    'prefix': 'createLinkTo'
    'body': '<g:createLinkTo ${1:dir="$2" }${3:file="$4" }${5:absolute="$6" }${7:base="$8"} />'
  '<g:currencySelect ..>':
    'prefix': 'currencySelect'
    'body': '<g:currencySelect name="${1:currencyName}" value="\\${${2:currency}}" />'
  '<g:each in=".." var="e" status="i">':
    'prefix': 'eavs'
    'body': '<g:each in="\\${${1:item}}" var="${2:e}" status="${3:i}">\n\t$0\n</g:each>'
  '<g:each in=".." var="i">':
    'prefix': 'eav'
    'body': '<g:each in="\\${${1:item}}" var="${2:i}">\n\t$0\n</g:each>'
  '<g:each in="..">':
    'prefix': 'ea'
    'body': '<g:each in="\\${${1:item}}">\n\t$0\n</g:each>'
  '<g:each>':
    'prefix': 'each'
    'body': '<g:each ${1:var="${2}" }in="\\${$3}">\n\t$0\n</g:each>'
  '<g:else>':
    'prefix': 'else'
    'body': '<g:else>\n\t$0\n</g:else>'
  '<g:elseif>':
    'prefix': 'elseif'
    'body': '<g:elseif test="\\${$1}">\n\t$0\n</g:elseif>'
  '<g:field type="..">':
    'prefix': 'field'
    'body': '<g:field type="${1:type}" name="${2:name}" value="\\${${3:value}}" />'
  '<g:form action="..">':
    'prefix': 'form'
    'body': '<g:form name="${1:name}" action="${2:action}">\n\t$0\n</g:form>'
  '<g:form controller=".." action=".."> ':
    'prefix': 'formc'
    'body': '<g:form name="${1:name}" controller="${2:controller}" action="${3:action}">\n\t$0\n</g:form>'
  '<g:hasErrors>':
    'prefix': 'hasErrors'
    'body': '<g:hasErrors ${1:bean="$2" }${3:model="$4" }${5:field="$6"}>\n\t$0\n</g:hasErrors>\n'
  '<g:hiddenField>':
    'prefix': 'hidden'
    'body': '<g:hiddenField name="${1:name}" value="\\${${2:value}}" />'
  '<g:if>':
    'prefix': 'if'
    'body': '<g:if test="\\${$1}">\n\t$0\n</g:if>\n'
  '<g:javascript library="..">':
    'prefix': 'jsl'
    'body': '<g:javascript library="${1:prototype}" />'
  '<g:javascript>':
    'prefix': 'js'
    'body': '<g:javascript>\n\t$0\n</g:javascript>'
  '<g:link>':
    'prefix': 'link'
    'body': '<g:link ${1:action="$2" }${3:controller="$4" }${5:id="$6" }${7:params="$8" }${9:url="$10" }${11:absolute="$12" }${13:base="$14"}>$15</g:link>'
  '<g:localeSelect ..>':
    'prefix': 'localeSelect'
    'body': '<g:localeSelect name="${1:localeName}" value="\\${${2:request.locale}}" />'
  '<g:message>':
    'prefix': 'msg'
    'body': '<g:message code="${1}"${2: args="[${3}]"}${4: default="${5}"}/>$0'
  '<g:radio> ':
    'prefix': 'radio'
    'body': '<g:radio name="${1:name}" value="\\${${2:true}}" checked="${3:true}" />'
  '<g:render>':
    'prefix': 'render'
    'body': '<g:render ${1:template="$2" }${3:bean="$4" }${5:model="$6" }${7:collection="$8" }${9:var="$10" }${11:plugin="$12" }/>'
  '<g:select from=".." >':
    'prefix': 'select'
    'body': '<g:select name="${1:name}" value="\\${${2:value}}" from="\\${${3:[1,2,3]}}" />'
  '<g:set>':
    'prefix': 'set'
    'body': '<g:set ${1:var="$2"} value="\\${${3:value}}" />'
  '<g:submitButton>':
    'prefix': 'submit'
    'body': '<g:submitButton name="${1:name}" value="${2:someValue}" />'
  '<g:textField>':
    'prefix': 'textField'
    'body': '<g:textField name="${1:name}" value="${2:someValue}" />'
  '<g:timeZoneSelect>':
    'prefix': 'timeZoneSelect'
    'body': '<g:timeZoneSelect name="${1:selectName}" value="\\${${2:tz}}" />'
  '<g:while>':
    'prefix': 'while'
    'body': '<g:while test="\\${$1}">\n\t$0\n</g:while>\n'
  '<asset:javascript src="..">':
    'prefix': 'assetJs'
    'body': '<asset:javascript src="${1:application.js}" />'
  '<asset:stylesheet href="..">':
    'prefix': 'assetCss'
    'body': '<asset:stylesheet href="${1:application.css}" />'
  '<asset:image src="..">':
    'prefix': 'assetImage'
    'body': '<asset:image src="${1:image.png}" />'
  '<asset:script>':
    'prefix': 'assetScript'
    'body': '<asset:script type="${1:text/javascript}">\n\t$0\n</asset:script>\n'
  '<asset:assetPathExists>':
    'prefix': 'assetPathExists'
    'body': '<asset:assetPathExists src="${1:test.js}">\n\t$0\n</asset:assetPathExists>\n'
  '<asset:deferredScripts>':
    'prefix': 'assetDeferred'
    'body': '<asset:deferredScripts />'
  'New short tag.. <g: />':
    'prefix': 'g:>'
    'body': '<g:${1:name} ${2:attr}="${3:value}" />'
  'New tag.. <g: ></g:>':
    'prefix': 'g:'
    'body': '<g:${1:name} ${2:attr}="${3:value}">$0</g:$1>'
  '<g:textArea>':
    'prefix': 'textArea'
    'body': '<g:textArea name="${1:name}" value="\\${${2:value}}" rows="${3:5}" cols="${4:40}" />'
  '<g:actionSubmit>':
    'prefix': 'actionSubmit'
    'body': '<g:actionSubmit value="${1:Some update label}" action="${2:update}" />'
  '<g:actionSubmitImage>':
    'prefix': 'actionSubmitImage'
    'body': '<g:actionSubmitImage value="${1:Some update label}" action="${2:update}" src="${3:image.png}" />'
  '<g:applyLayout template="..">':
    'prefix': 'applyLayoutTemplate'
    'body': '<g:applyLayout name="${1:name}" template="${2:template}" params="[${3:books : books}]" />'
  '<g:applyLayout url="..">':
    'prefix': 'applyLayoutUrl'
    'body': '<g:applyLayout name="${1:name}" url="${2:url}" />'
  '<g:applyLayout></g:applyLayout>':
    'prefix': 'applyLayout'
    'body': '<g:applyLayout name="${1:name}">\n\t$0\n</g:applyLayout>\n'
  '<g:collect>':
    'prefix': 'collect'
    'body': '<g:collect in="\\${${1:list}}" expr="${2:it.name}">\n\t$0\n</g:collect>\n'
  '<g:cookie>':
    'prefix': 'cookie'
    'body': '<g:cookie name="${1:name}" />'
  '<g:country>':
    'prefix': 'country'
    'body': '<g:country code="${1:ury}" />'
  '<g:countrySelect>':
    'prefix': 'countrySelect'
    'body': '<g:countrySelect name="${1:name}" value="\\${${2:country}}" ${3:noSelection="[\'\':\'-Choose your country-\']"} />'
  '<g:countrySelect from="[..]">':
    'prefix': 'countrySelectFrom'
    'body': '<g:countrySelect name="${1:name}" from="\\${${2:list}}" value="\\${${3:country}}" />'
  '<g:datePicker>':
    'prefix': 'datePicker'
    'body': '<g:datePicker name="${1:name}" value="\\${${2:new Date()}}" ${3:noSelection="[\'\':\'-Choose-\']"} />'
  '<g:eachError>':
    'prefix': 'eachError'
    'body': '<g:eachError bean="\\${${1:bean}}"${2: field="${3:name}"}>\n\t$0\n</g:eachError>\n'
  '<g:external dir=".." file="..">':
    'prefix': 'externalFile'
    'body': '<g:external dir="$1" file="$2" ${3:type="$4" }/>'
  '<g:external uri="..">':
    'prefix': 'externalUri'
    'body': '<g:external uri="${1:/images/$0}" />'
  '<g:fieldError>':
    'prefix': 'fieldError'
    'body': '<g:fieldError bean="\\${$1}" field="$2" />'
  '<g:fieldValue>':
    'prefix': 'fieldValue'
    'body': '<g:fieldValue bean="\\${$1}" field="$2" />'
  '<g:findAll>':
    'prefix': 'findAll'
    'body': '<g:findAll in="\\${${1:list}}" expr="${2:it.name == \'something\'}">\n\t$0\n</g:findAll>\n'
  '<g:formatBoolean>':
    'prefix': 'formatBoolean'
    'body': '<g:formatBoolean boolean="\\${${1:value}}" ${2:true="${3:True!}" false="${4:False!}" }/>'
  '<g:formatDate>':
    'prefix': 'formatDate'
    'body': '<g:formatDate date="\\${${1:value}}" ${2:type="${3:datetime}" }${4:style="${5:LONG}" }${6:timeStyle="${7:SHORT}" }/>'
  '<g:formatNumber>':
    'prefix': 'formatNumber'
    'body': '<g:formatNumber number="\\${${1:value}}" ${2:format="${3:\\$###,##0}" }/>'
  '<g:formatNumber type="currency">':
    'prefix': 'formatCurrency'
    'body': '<g:formatNumber number="\\${${1:value}}" type="currency" currencyCode="${2:UYU}" />'
  '<g:grep>':
    'prefix': 'grep'
    'body': '<g:grep in="\\${${1:list.language}}" filter="${2:~/.*Groovy.*/}">\n\t$0\n</g:grep>\n'
  '<g:header>':
    'prefix': 'header'
    'body': '<g:header name="${1:Content-Type}" />'
  '<g:img>':
    'prefix': 'img'
    'body': '<g:img ${1:dir="$2" }${3:file="$4" }${5:width="$6" height="$7"} />'
  '<g:include>':
    'prefix': 'include'
    'body': '<g:include ${1:action="$2" }${3:controller="$4" }${5:id="$6" }${7:params="$8" }/>'
  '<plugin:isAvailable>':
    'prefix': 'isAvailable'
    'body': '<plugin:isAvailable name="$1" ${2:version="$3" }/>'
  '<plugin:isNotAvailable>':
    'prefix': 'isNotAvailable'
    'body': '<plugin:isNotAvailable name="$1" ${2:version="$3" }/>'
  '<g:javascript src="..">':
    'prefix': 'jssrc'
    'body': '<g:javascript src="${1:script.js}" />'
  '<g:join>':
    'prefix': 'join'
    'body': '<g:join in="[$1]" ${2:delimiter="$3" }/>'
  '<g:layoutBody>':
    'prefix': 'layoutBody'
    'body': '<g:layoutBody />'
  '<g:layoutHead>':
    'prefix': 'layoutHead'
    'body': '<g:layoutHead />'
  '<g:layoutTitle>':
    'prefix': 'layoutTitle'
    'body': '<g:layoutTitle default="$1" />'
  '<g:meta>':
    'prefix': 'meta'
    'body': '<g:meta name="${1:app.version}" />'
  '<g:pageProperty>':
    'prefix': 'pageProperty'
    'body': '<g:pageProperty name="${1:page.title}" />'
  '<g:paginate>':
    'prefix': 'paginate'
    'body': '<g:paginate ${1:controller="$2" }${3:action="$4" }${5:total="\\${$6\\}" }/>'
  '<g:passwordField>':
    'prefix': 'passwordField'
    'body': '<g:passwordField name="$1" ${2:value="\\${$3\\}" }/>'
  '<g:radioGroup> ':
    'prefix': 'radioGroup'
    'body': '<g:radioGroup name="${1:name}" values="[$2]" ${3:value="\\${$4\\}" }/>'
  '<g:renderErrors>':
    'prefix': 'renderErrors'
    'body': '<g:renderErrors bean="\\${$1}" ${2:as="${3:list}" }${4:field="$5" }/>'
  '<g:resource>':
    'prefix': 'resource'
    'body': '<g:resource dir="$1" file="$2" ${3:absolute="$4" }${5:base="$6" }/>'
  '<g:sortableColumn>':
    'prefix': 'sortableColumn'
    'body': '<g:sortableColumn property="$1" title="$2" />'
  '<g:unless>':
    'prefix': 'unless'
    'body': '<g:unless test="\\${$1}">\n\t$0\n</g:unless>\n'
  '<g:unless env="..">':
    'prefix': 'unlessEnv'
    'body': '<g:unless test="\\${$1}" env="${2:production}">\n\t$0\n</g:unless>\n'
  '<g:if env="..">':
    'prefix': 'ifEnv'
    'body': '<g:if test="\\${$1}" env="${2:production}">\n\t$0\n</g:if>\n'
  '<g:uploadForm>':
    'prefix': 'uploadForm'
    'body': '<g:uploadForm name="$1" ${2:action="$3" }${4:controller="$5" }${6:id="$7" }>\n\t<input type="file" name="$8" />\n</g:uploadForm>\n'
'.source.groovy':
  'New Controller':
    'prefix': 'cont'
    'body': 'class ${1:Name}Controller {\n\tdef index = {\n\t\t $0\n\t}\n}'
  'New Tag':
    'prefix': 'tag'
    'body': 'def ${1:closureName} =  { attrs, body ->\n\t$0\n}'
  'New Tag Library':
    'prefix': 'taglib'
    'body': 'class ${1:Name}TagLib {\n\t$0\n}'
  'New Unit Test':
    'prefix': 'unit'
    'body': 'package ${1}\n\t\t\nimport grails.test.*\n\t\t\nclass ${2:Name}Tests extends GrailsUnitTestCase {\n\n\tprotected void setUp() {\n        super.setUp()\n    }\n\n    protected void tearDown() {\n        super.tearDown()\n    }\n\n\tvoid test${3:Something}() {\n\t\t $0\n\t}\n\t\n}'
  'belongsTo':
    'prefix': 'bt'
    'body': 'static belongsTo = [${1:ClassName}]'
  'constraints':
    'prefix': 'constraints'
    'body': 'static constraints = {\n\t$0\n}'
  'hasMany':
    'prefix': 'hm'
    'body': 'static hasMany = [${1:items}:${2:ClassName}]'
  'hasOne':
    'prefix': 'ho'
    'body': 'static hasOne = [${1:item}:${2:ClassName}]'
  'mockConstraints':
    'prefix': 'mc'
    'body': 'mockForConstraintsTests(${1:DomainClass})\ndef test${1} = new ${1}()\nassertFalse test${1}.validate()\nassertEquals "${2:nullable}", test${1}.errors["${3:someproperty}"]'
  'mockDomain':
    'prefix': 'md'
    'body': 'mockDomain(${1:DomainClass}, [\n\tnew ${1}($0)\n])'
  'mockFor':
    'prefix': 'mf'
    'body': 'def ${1:mockControl} = mockFor(${2:ClassName})\n${1}.demand.${3:yourMethod}(${4:1}..${5:1}) = {-&gt;\n\t$0\n}\ndef test${2} = ${1}.createMock()'
  'mockLogging':
    'prefix': 'ml'
    'body': 'mockLogging(${1:ClassName})'
  'mockSession':
    'prefix': 'ms'
    'body': 'mockSession.${1:property} = ${2:value}'
  'namedQueries':
    'prefix': 'nq'
    'body': 'static namedQueries = {\n    ${1:queryName} {\n        $0\n    }\n}'
  'redirect(action:..)':
    'prefix': 'rea'
    'body': 'redirect(action:"${1:name}")'
  'redirect(action:.., id:...)':
    'prefix': 'reai'
    'body': 'redirect(action:"${1:name}",id:${2:1})'
  'redirect(controller:..)':
    'prefix': 'rec'
    'body': 'redirect(controller:"${1:name}")'
  'redirect(controller:.., action:.. , id:..)':
    'prefix': 'recai'
    'body': 'redirect(controller:"${1:c}",action:"${2:a}",id:${3:1})'
  'redirect(controller:.., action:..)':
    'prefix': 'reca'
    'body': 'redirect(controller:"${1:c}",action:"${2:a}")'
  'render(contentType:"text/json") { ... } ':
    'prefix': 'rjson'
    'body': 'render(contentType:"text/json", builder:"json") {\n\t$0\n}'
  'render(contentType:"text/xml") { ... }':
    'prefix': 'rxml'
    'body': 'render(contentType:"text/xml") {\n\t$0\n}'
  'render(template:"..")':
    'prefix': 'rte'
    'body': 'render(template:"${1:name}")'
  'render(template:"..",bean:b)':
    'prefix': 'rteb'
    'body': 'render(template:"${1:name}",bean:${2:b})'
  'render(template:"..",bean:b,var:"x")':
    'prefix': 'rtebv'
    'body': 'render(template:"${1:name}",bean:${2:b}, var:"${3:x}")'
  'render(template:"..",collection:c)':
    'prefix': 'rtec'
    'body': 'render(template:"${1:name}",collection:${1:col})'
  'render(template:"..",collection:c, var:"x")':
    'prefix': 'rtecb'
    'body': 'render(template:"${1:name}",collection:${2:col}, var:"${3:x}")'
  'render(template:"..",model:m) ':
    'prefix': 'rtem'
    'body': 'render(template:"${1:name}",model:[${2:name}:${3:obj}])'
  'render(text:"..")':
    'prefix': 'rt'
    'body': 'render(text:"${1:value}")'
  'render(text:"..", contentType:"..")':
    'prefix': 'rtc'
    'body': 'render(text:"${1:value}", contentType:"${2:text/xml}")'
  'render(view:"..")':
    'prefix': 'rv'
    'body': 'render(view:"${1:name}")'
  'render(view:"..", model:m)':
    'prefix': 'rvm'
    'body': 'render(view:"${1:name}", model:[${2:name}:${3:obj}])'
  'out << ""':
    'prefix': 'out'
    'body': 'out << "${1:output}"'
'.source.groovy.embedded.html.grails':
  'g.message()':
    'prefix': 'msg'
    'body': 'g.message(code:"${1}"${2:, args:${3}}${4:, default:"${5}"})$0'
